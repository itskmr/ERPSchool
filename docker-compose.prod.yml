services:
  app:
    build: .
    ports:
      - "80:80"
    volumes:
      - ./uploads:/var/www/html/uploads
      - ./application/logs:/var/www/html/application/logs
    depends_on:
      - db
    environment:
      - MYSQL_HOST=db
      - MYSQL_DATABASE=school
      - MYSQL_USER=school_user
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - CI_ENV=production
    command: |
      bash -c "sed -i \"s/'hostname' => 'localhost'/'hostname' => 'db'/g\" /var/www/html/application/config/database.php && \
               sed -i \"s/'username' => 'root'/'username' => 'school_user'/g\" /var/www/html/application/config/database.php && \
               sed -i \"s/'password' => ''/'password' => '${MYSQL_PASSWORD}'/g\" /var/www/html/application/config/database.php && \
               sed -i \"s/define('ENVIRONMENT', isset(\\\$_SERVER['CI_ENV']) ? \\\$_SERVER['CI_ENV'] : 'production');/define('ENVIRONMENT', 'production');/g\" /var/www/html/index.php && \
               apache2-foreground"
    restart: unless-stopped
    networks:
      - app-network

  db:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: school
      MYSQL_USER: school_user
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
      - ./database_file/school.sql:/docker-entrypoint-initdb.d/school.sql
    ports:
      - "127.0.0.1:3306:3306"  # Only accessible locally
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - app-network

volumes:
  db_data:

networks:
  app-network:
    driver: bridge 